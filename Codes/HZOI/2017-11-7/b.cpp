#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
inline int ______________()
{
    int _=0,__=1;char ___=getchar();
    while(___<'0'||___>'9'){if(___=='-')__=-1;___=getchar();}
    while(___>='0'&&___<='9'){_=_*10+___-'0';___=getchar();}
    return _*__;
}
struct _____________
{
    int _, __;
}_[100005];
int _____, ______;
bool _______________(int ____)
{
    int __ = -0x3f3f3f3f, ___ = 0x3f3f3f3f;
    for (int _________ = 1; _________ <= _____; _________++)
        if (_[_________].__ - _[_________]._ > ____)
        {
            ___ = min(_[_________].__ + _[_________]._ + ____, ___);
            __ = max(_[_________].__ + _[_________]._ - ____, __);
        }
    if (__ > ___) return 0;
    __ = -0x3f3f3f3f, ___ = 0x3f3f3f3f;
    for (int _________ = 1; _________ <= _____; _________++)
        if (_[_________].__ - _[_________]._ > ____)
        {
            ___ = min(_[_________].__ - _[_________]._ + ____, ___);
            __ = max(_[_________].__ - _[_________]._ - ____, __);
        }
    if (__ > ___) return 0;
    return 1;
}
int main()
{
    _____ = ______________(), ______ = ______________();
    for (int _________ = 1; _________ <= ______; _________++)
        _[_________]._ = ______________(), _[_________].__ = ______________();
    int __ = 0, ___ = ______;
    int _______ = 0;
    while (__ <= ___)
    {
        int ____ = __ + ___ >> 1;
        if (_______________(____)) _______ = ____, ___ = ____ - 1;
        else __ = ____ + 1;
    }
    printf ("%d\n", _______);
}